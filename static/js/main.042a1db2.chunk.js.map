{"version":3,"sources":["components/CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","selectCurrency","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAiBeA,MAff,SAAqBC,GAAQ,IACjBC,EAAgFD,EAAhFC,gBAAiBC,EAA+DF,EAA/DE,iBAAkBC,EAA6CH,EAA7CG,iBAAkBC,EAA2BJ,EAA3BI,eAAgBC,EAAWL,EAAXK,OAC7E,OACI,6BACI,2BAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQI,SAAUL,IAChE,4BAAQI,MAAON,EAAkBO,SAAUN,GACtCF,EAAgBS,KAAI,SAAAC,GAAM,OACvB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,SCLnDE,EAAW,yCA8EFC,MA5Ef,WAAgB,IASVC,EAAUC,EATD,EAEiCC,mBAAS,IAF1C,mBAENhB,EAFM,KAEWiB,EAFX,OAG2BD,qBAH3B,mBAGNE,EAHM,KAGQC,EAHR,OAIuBH,qBAJvB,mBAINI,EAJM,KAIMC,EAJN,OAK2BL,qBAL3B,mBAKNM,EALM,KAKQC,EALR,OAMeP,mBAAS,GANxB,mBAMNZ,EANM,KAMEoB,EANF,OAO2CR,oBAAS,GAPpD,mBAONS,EAPM,KAOgBC,EAPhB,KAmDb,OAzCID,GACFV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAIxBK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACa,OAAjBT,GAAuC,MAAdE,GAG3BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAE5C,CAACF,EAAcE,IAahB,oCACE,kDACA,kBAAC,EAAD,CACEpB,gBAAiBA,EACjBsC,eAAgBpB,EAChBhB,iBAAkB,SAAAqC,GAAC,OAAIpB,EAAgBoB,EAAEC,OAAOjC,QAChDJ,eAjBN,SAAgCoC,GAC9Bf,EAAUe,EAAEC,OAAOjC,OACnBmB,GAAwB,IAgBpBtB,OAAQW,IAEV,yBAAKT,UAAU,UAAf,KACA,kBAAC,EAAD,CACEN,gBAAiBA,EACjBC,iBAAkBmB,EAClBlB,iBAAkB,SAAAqC,GAAC,OAAIlB,EAAckB,EAAEC,OAAOjC,QAC9CJ,eApBN,SAA8BoC,GAC5Bf,EAAUe,EAAEC,OAAOjC,OACnBmB,GAAwB,IAoBpBtB,OAAQU,MCrEhB2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.042a1db2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction CurrencyRow(props) {\r\n    const { currencyOptions, selectedCurrency, onChangeCurrency, onChangeAmount, amount } = props\r\n    return (\r\n        <div>\r\n            <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount} />\r\n            <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n                {currencyOptions.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                ))}\r\n\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyRow;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from \"./components/CurrencyRow\";\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      })\n  }, [])\n\n  useEffect(() => {\n    if (fromCurrency !== null && toCurrency != null) {\n\n\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <>\n      <h1>Currency Converter</h1>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectCurrency={fromCurrency}\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\n        onChangeAmount={handleFromAmountChange}\n        amount={fromAmount}\n      />\n      <div className=\"equals\">=</div>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        onChangeAmount={handleToAmountChange}\n\n        amount={toAmount}\n\n\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}